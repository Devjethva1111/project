// Generated by view binder compiler. Do not edit!
package com.touchizen.drawerwithbottomnavigation.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.appbar.AppBarLayout;
import com.touchizen.drawerwithbottomnavigation.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityServiceProviderCardBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final CircleImageView acService;

  @NonNull
  public final CircleImageView cafe;

  @NonNull
  public final CircleImageView carRepair;

  @NonNull
  public final CircleImageView doctor;

  @NonNull
  public final CircleImageView electrician;

  @NonNull
  public final CircleImageView grocery;

  @NonNull
  public final AppBarLayout layoutmain;

  @NonNull
  public final CircleImageView medicine;

  @NonNull
  public final CircleImageView plumber;

  @NonNull
  public final SwipeRefreshLayout refreshLayout;

  @NonNull
  public final Toolbar toolbarSearch;

  private ActivityServiceProviderCardBinding(@NonNull RelativeLayout rootView,
      @NonNull CircleImageView acService, @NonNull CircleImageView cafe,
      @NonNull CircleImageView carRepair, @NonNull CircleImageView doctor,
      @NonNull CircleImageView electrician, @NonNull CircleImageView grocery,
      @NonNull AppBarLayout layoutmain, @NonNull CircleImageView medicine,
      @NonNull CircleImageView plumber, @NonNull SwipeRefreshLayout refreshLayout,
      @NonNull Toolbar toolbarSearch) {
    this.rootView = rootView;
    this.acService = acService;
    this.cafe = cafe;
    this.carRepair = carRepair;
    this.doctor = doctor;
    this.electrician = electrician;
    this.grocery = grocery;
    this.layoutmain = layoutmain;
    this.medicine = medicine;
    this.plumber = plumber;
    this.refreshLayout = refreshLayout;
    this.toolbarSearch = toolbarSearch;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityServiceProviderCardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityServiceProviderCardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_service_provider_card, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityServiceProviderCardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ac_service;
      CircleImageView acService = rootView.findViewById(id);
      if (acService == null) {
        break missingId;
      }

      id = R.id.cafe;
      CircleImageView cafe = rootView.findViewById(id);
      if (cafe == null) {
        break missingId;
      }

      id = R.id.car_repair;
      CircleImageView carRepair = rootView.findViewById(id);
      if (carRepair == null) {
        break missingId;
      }

      id = R.id.doctor;
      CircleImageView doctor = rootView.findViewById(id);
      if (doctor == null) {
        break missingId;
      }

      id = R.id.electrician;
      CircleImageView electrician = rootView.findViewById(id);
      if (electrician == null) {
        break missingId;
      }

      id = R.id.grocery;
      CircleImageView grocery = rootView.findViewById(id);
      if (grocery == null) {
        break missingId;
      }

      id = R.id.layoutmain;
      AppBarLayout layoutmain = rootView.findViewById(id);
      if (layoutmain == null) {
        break missingId;
      }

      id = R.id.medicine;
      CircleImageView medicine = rootView.findViewById(id);
      if (medicine == null) {
        break missingId;
      }

      id = R.id.plumber;
      CircleImageView plumber = rootView.findViewById(id);
      if (plumber == null) {
        break missingId;
      }

      id = R.id.refreshLayout;
      SwipeRefreshLayout refreshLayout = rootView.findViewById(id);
      if (refreshLayout == null) {
        break missingId;
      }

      id = R.id.toolbar_search;
      Toolbar toolbarSearch = rootView.findViewById(id);
      if (toolbarSearch == null) {
        break missingId;
      }

      return new ActivityServiceProviderCardBinding((RelativeLayout) rootView, acService, cafe,
          carRepair, doctor, electrician, grocery, layoutmain, medicine, plumber, refreshLayout,
          toolbarSearch);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
